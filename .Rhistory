##         0         1
## 0.8387567 0.1612433
set.seed(1000)
smote_train=SMOTE(Attrition ~ .,data=train.scale)
q=prop.table(table(smote_train$Attrition))
cat("After SMOTE the propotions are:"); print(q,row.names=FALSE)
set.seed(1000)
r.control=rpart.control(minsplit=60,minbucket =20,cp=0,xval=3)
cart.train=rpart(Attrition~.,data=smote_train,method="class",control=r.control)
cmt=table(Predicted=predict(cart.train,smote_train,type="class"),Actual=smote_train$Attrition)
confusionMatrix(cmt,positive="1",mode="everything")
install.packages("RcoloBrewer")
#library(RColorBrewer)
#fancyRpartPlot(cart.train)
printcp(cart.train)
rpart.plot(cart.train)
##Pruning decision tree ##
ptree = prune(cart.train, cp= 0.0075301205 , "CP")
printcp(ptree)
rpart.plot(ptree)
smote_train$predict.class=predict(ptree,smote_train,type="class")
smote_train$predict.score=predict(ptree,smote_train)
deciles <- vector(length=10)
decile <- function(x){
deciles <- vector(length=10)
for (i in seq(0.1,1,.1)){
deciles[i*10] <- quantile(x, i, na.rm=T)
}
return (
ifelse(x<deciles[1], 1,
ifelse(x<deciles[2], 2,
ifelse(x<deciles[3], 3,
ifelse(x<deciles[4], 4,
ifelse(x<deciles[5], 5,
ifelse(x<deciles[6], 6,
ifelse(x<deciles[7], 7,
ifelse(x<deciles[8], 8,
ifelse(x<deciles[9], 9, 10
))))))))))
}
smote_train$deciles <- decile(smote_train$predict.score[,2])
library(data.table)
library(scales)
tmp_DT = data.table(smote_train)
rank <- tmp_DT[, list(
cnt = length(AttritionYes),
cnt_AtrY = sum(AttritionYes),
cnt_AtrN = sum(AttritionYes == 0)) ,
by=deciles][order(-deciles)]
View(smote_train)
rank <- tmp_DT[, list(
cnt = length(Attrition),
cnt_AtrY = sum(Attrition),
cnt_AtrN = sum(Attrition == 0)) ,
by=deciles][order(-deciles)]
tmp_DT$Attrition=as.numeric(as.character(tmp_DT$Attrition))
rank <- tmp_DT[, list(
cnt = length(Attrition),
cnt_AtrY = sum(Attrition),
cnt_AtrN = sum(Attrition == 0)) ,
by=deciles][order(-deciles)]
rank$rrate <- round (rank$cnt_AtrY / rank$cnt,2);
rank$cum_cnt_AtrY <- cumsum(rank$cnt_AtrY)
rank$cum_cnt_AtrN <- cumsum(rank$cnt_AtrN)
rank$cum_rel_AtrY <- round(rank$cnt_AtrY / sum(rank$cnt_AtrY),2);
rank$cum_rel_AtrN <- round(rank$cnt_AtrN / sum(rank$cnt_AtrN),2);
rank$ks <- abs(rank$cum_rel_AtrY - rank$cum_rel_AtrN);
rank$rrate <- percent(rank$rrate)
rank$cum_rel_AtrY <- percent(rank$cum_rel_AtrY)
rank$cum_rel_AtrN <- percent(rank$cum_rel_AtrN)
library(scales)
View(rank)
write.csv(rank,file="rank_cart.csv",row.names=FALSE)
pred <- ROCR::prediction(smote_train$predict.score[,2], smote_train$Target)
pred <- ROCR::prediction(smote_train$predict.score[,2], smote_train$Attrition)
perf <- performance(pred, "tpr", "fpr")
KS <- max(attr(perf, 'y.values')[[1]]-attr(perf, 'x.values')[[1]])
auc <- performance(pred,"auc");
auc <- as.numeric(auc@y.values)
test.scale$predict.class <- predict(ptree, test.scale, type="class")
test.scale$predict.score <- predict(ptree, test.scale)
test.scale$deciles <- decile(test.scale$predict.score[,2])
library(data.table)
tmp_DT = data.table(test.scale)
tmp_DT$Attrition=as.numeric(as.character(tmp_DT$Attrition))
h_rank <- tmp_DT[, list(
cnt = length(Attrition),
cnt_resp = sum(Attrition),
cnt_non_resp = sum(Attrition == 0)) ,
by=deciles][order(-deciles)]
h_rank$rrate <- round(h_rank$cnt_resp * 100 / h_rank$cnt,2);
h_rank$cum_resp <- cumsum(h_rank$cnt_resp)
h_rank$cum_non_resp <- cumsum(h_rank$cnt_non_resp)
h_rank$cum_perct_resp <- round(h_rank$cum_resp * 100 / sum(h_rank$cnt_resp),2);
h_rank$cum_perct_non_resp <- round(h_rank$cum_non_resp * 100 / sum(h_rank$cnt_non_resp),2);
h_rank$ks <- abs(h_rank$cum_perct_resp - h_rank$cum_perct_non_resp);
pred <- ROCR::prediction(test.scale$predict.class, test.scale$Attrition)
pred <- ROCR::prediction(test.scale$predict.class[,2], test.scale$Attrition)
pred <- ROCR::prediction(test.scale$predict.score[,2], test.scale$Attrition)
perf <- performance(pred, "tpr", "fpr")
KS <- max(attr(perf, 'y.values')[[1]]-attr(perf, 'x.values')[[1]])
auc <- performance(pred,"auc");
write.csv(h_rank,file="rank_cart_test.csv",row.names = FALSE)
library(scales)
h_rank$rrate <- percent(h_rank$rrate)
h_rank$cum_rel_AtrY <- percent(h_rank$cum_rel_AtrY)
h_rank$cum_rel_AtrN <- percent(h_rank$cum_rel_AtrN)
write.csv(h_rank,file="rank_cart_test.csv",row.names = FALSE)
write.csv(h_rank,file="rank_cart_test.csv",row.names = FALSE)
tmp_DT = data.table(test.scale)
tmp_DT$Attrition=as.numeric(as.character(tmp_DT$Attrition))
h_rank <- tmp_DT[, list(
cnt = length(Attrition),
cnt_resp = sum(Attrition),
cnt_non_resp = sum(Attrition == 0)) ,
by=deciles][order(-deciles)]
h_rank$rrate <- round(h_rank$cnt_resp * 100 / h_rank$cnt,2);
h_rank$cum_resp <- cumsum(h_rank$cnt_resp)
h_rank$cum_non_resp <- cumsum(h_rank$cnt_non_resp)
h_rank$cum_perct_resp <- round(h_rank$cum_resp * 100 / sum(h_rank$cnt_resp),2);
h_rank$cum_perct_non_resp <- round(h_rank$cum_non_resp * 100 / sum(h_rank$cnt_non_resp),2);
h_rank$ks <- abs(h_rank$cum_perct_resp - h_rank$cum_perct_non_resp);
library(scales)
h_rank$rrate <- percent(h_rank$rrate)
h_rank$cum_rel_AtrY <- percent(h_rank$cum_rel_AtrY)
h_rank$cum_rel_AtrN <- percent(h_rank$cum_rel_AtrN)
#View(h_rank)
write.csv(h_rank,file="rank_cart_test.csv",row.names = FALSE)
View(h_rank)
knitr::opts_chunk$set(echo = TRUE,warning=FALSE,message = FALSE)
library(plyr)
library(tidyverse)
library(formattable)
library(splitstackshape)
library(jsonlite)
library(wordcloud)
library(RColorBrewer)
library(ggthemes)
library(tm)
library(RSentiment)
library(zoo)
library(stringr)
movie=read_csv("tmdb_5000_movies.csv",col_names=TRUE,na="NA")
credits=read_csv("tmdb_5000_credits.csv",col_names=TRUE,na="NA")
genre=movie %>% filter(nchar(genres)>2) %>% mutate(js=lapply(genres,fromJSON)) %>% unnest(js) %>% select(id,title,genre=name) #Convert JSON format into data frame
#genre=aggregate(genre ~.,data=genre,paste,collapse=",") # remove duplicates
credit=credits %>% filter(nchar(cast)>2) %>% mutate(js=lapply(cast,fromJSON)) %>% unnest(js)
cat("Before JS the columns are ",names(credit),sep='\n')
credit= credit%>% select(-c(crew,cast_id,credit_id,id))
cat("After removing id columns the names are",names(credit),sep='\n')
revenue=function (df,col_name,x,y,title){
temp_df=df %>% filter(name==col_name) %>% arrange(desc(revenue)) %>% head(10)
df_plot= ggplot(temp_df,aes(reorder(original_title,revenue),revenue,fill=original_title))+geom_bar(stat="identity")+theme_few()+theme(axis.text.x = element_text(angle=90,vjust=0.5),plot.title=element_text(hjust=0.5,size=15),legend.position="none")+labs(x=x,y=y,title=title)+coord_flip()+scale_x_discrete(labels=function(x)str_wrap(x,width=12))+scale_y_continuous(labels=scales::comma)
}
artist=revenue(db_credit,name="Samuel L.Jackson",x="Title",y="Revenue",title="Samuel L.Jackson-Top 10 by revenue" )
revenue=function (df,col_name,x,y,title){
temp_df=df %>% filter(name==col_name) %>% arrange(desc(revenue)) %>% head(10)
df_plot= ggplot(temp_df,aes(reorder(original_title,revenue),revenue,fill=original_title))+geom_bar(stat="identity")+theme_few()+theme(axis.text.x = element_text(angle=90,vjust=0.5),plot.title=element_text(hjust=0.5,size=15),legend.position="none")+labs(x=x,y=y,title=title)+coord_flip()+scale_x_discrete(labels=function(x)str_wrap(x,width=12))+scale_y_continuous(labels=scales::comma)
print(df_plot)
return(temp_df)
}
revenue(db_credit,col_name="Samuel L.Jackson",x="Title",y="Revenue",title="Samuel L.Jackson-Top 10 by revenue" )
db=movie %>% left_join(credits,by=c("id"="movie_id"))
db_credit=db %>% filter(nchar(cast)>2) %>% mutate(js=lapply(cast,fromJSON)) %>% unnest(js)
revenue(db_credit,col_name="Samuel L.Jackson",x="Title",y="Revenue",title="Samuel L.Jackson-Top 10 by revenue" )
col_name="Samuel L.Jackson"
temp_df=df %>% filter(name==col_name) %>% arrange(desc(revenue)) %>% head(10)
temp_df=df %>% subset(name==col_name) %>% arrange(desc(revenue)) %>% head(10)
df=db_credit
View(df)
temp_df=df %>% subset(name==col_name) %>% arrange(desc(revenue)) %>% head(10)
credit %>% group_by(name) %>% tally() %>% arrange(desc(n)) %>% head(10) %>% ggplot(aes(factor(name,levels=name),n,fill=name))+geom_bar(stat="identity")+labs(x="Artist",y="Count",title="Top 10 artist with most movies")+theme_few()+theme(axis.text.x=element_text(angle=90),plot.title=element_text(hjust=0.5,color="red"),legend.position="none")
df_credit=credit %>% group_by(name) %>% tally() %>% arrange(desc(n)) %>% head(10)
View(df_credit)
col_name="Samuel L. Jackson"
temp_df=df %>% subset(name==col_name) %>% arrange(desc(revenue)) %>% head(10)
revenue=function (df,col_name,x,y,title){
temp_df=df %>% filter(name==col_name) %>% arrange(desc(revenue)) %>% head(10)
df_plot= ggplot(temp_df,aes(reorder(original_title,revenue),revenue,fill=original_title))+geom_bar(stat="identity")+theme_few()+theme(axis.text.x = element_text(angle=90,vjust=0.5),plot.title=element_text(hjust=0.5,size=15),legend.position="none")+labs(x=x,y=y,title=title)+coord_flip()+scale_x_discrete(labels=function(x)str_wrap(x,width=12))+scale_y_continuous(labels=scales::comma)
print(df_plot)
return(temp_df)
}
revenue(db_credit,col_name="Samuel L. Jackson",x="Title",y="Revenue",title="Samuel L.Jackson-Top 10 by revenue" )
revenue(db_credit,col_name="Samuel L. Jackson",x="Title",y="Revenue",title="Samuel L.Jackson-Top 10 by revenue" )
revenue(db_credit,col_name="Samuel L. Jackson",x="Title",y="Revenue",title="Samuel L.Jackson-Top 10 by revenue" )
revenue=function (df,col_name,x,y,title){
temp_df=df %>% filter(name==col_name) %>% arrange(desc(revenue)) %>% head(10)
df_plot= ggplot(temp_df,aes(reorder(original_title,revenue),revenue,fill=original_title))+geom_bar(stat="identity")+theme_few()+theme(axis.text.x = element_text(angle=90,vjust=0.5),plot.title=element_text(hjust=0.5,size=15),legend.position="none")+labs(x=x,y=y,title=title)+coord_flip()+scale_x_discrete(labels=function(x)str_wrap(x,width=15))+scale_y_continuous(labels=scales::comma)
print(df_plot)
return(temp_df)
}
revenue(db_credit,col_name="Samuel L. Jackson",x="Title",y="Revenue",title="Samuel L.Jackson-Top 10 by revenue" )
revenue(db_credit,col_name="Samuel L. Jackson",x="Title",y="Revenue",title="Samuel L.Jackson-Top 10 by revenue" )
revenue(db_credit,col_name="Robert De Niro",x="Title",y="Revenue",title="Robert De Niro-Top 10 by revenue" )
revenue(db_credit,col_name="Bruce Willis",x="Title",y="Revenue",title="Bruce Willis-Top 10 by revenue" )
p1=revenue(db_credit,col_name="Samuel L. Jackson",x="Title",y="Revenue",title="Samuel L.Jackson-Top 10 by revenue" )
p2=revenue(db_credit,col_name="Robert De Niro",x="Title",y="Revenue",title="Robert De Niro-Top 10 by revenue" )
p3=revenue(db_credit,col_name="Bruce Willis",x="Title",y="Revenue",title="Bruce Willis-Top 10 by revenue" )
p4=revenue(db_credit,col_name="Matt Damon",x="Title",y="Revenue",title="Matt Damon-Top 10 by revenue" )
p5=revenue(db_credit,col_name="Morgan Freeman",x="Title",y="Revenue",title="Morgan Freeman-Top 10 by revenue" )
gridExtra::grid.arrange(p1,p2,p3,p4,p5,ncol=1,main=" Highest revenue movie by most prominent actors ")
revenue(db_credit,col_name="Samuel L. Jackson",x="Title",y="Revenue",title="Samuel L.Jackson-Top 10 by revenue" )
compiler::getCompilerOption("optimize")
knitr::opts_chunk$set(echo = TRUE,warning=FALSE,message=FALSE)
library(dplyr)
library(ggplot2)
library(ggthemes)
library(corrplot)
library(forcats)
library(gridExtra)
library(stringr)
library(caret)
library(formattable)
library(rpart)
library(rpart.plot)
library(Deducer)
library(Boruta)
library(neuralnet)
library(DMwR)
library(ROCR)
library(dummy)
library(caretEnsemble)
library(h2o)
library(randomForest)
attr=read.csv("HR_Employee_Attrition_Data.csv",header=TRUE,stringsAsFactors = FALSE)
#dim(attr)
summary(attr)
attr=attr[,!(names(attr) %in% c('Over18','EmployeeCount','StandardHours','EmployeeNumber'))]
numeric=attr %>% dplyr::select(Age,DailyRate,DistanceFromHome,HourlyRate,MonthlyIncome,MonthlyRate,NumCompaniesWorked,PercentSalaryHike,YearsAtCompany,YearsInCurrentRole,YearsSinceLastPromotion,YearsWithCurrManager,TotalWorkingYears,TrainingTimesLastYear,StockOptionLevel)
set.seed(1000)
a=createDataPartition(attr$Attrition,p=0.7,list=FALSE)
train=attr[a,]
test=attr[-a,]
cat("Train data has",nrow(train),"observations")
cat("Test data has",nrow(test),"observations")
train=train %>% mutate(Attrition=factor(Attrition)) %>% mutate(Attrition=fct_recode(Attrition,"0"="No","1"="Yes"))
test=test %>% mutate(Attrition=factor(Attrition)) %>% mutate(Attrition=fct_recode(Attrition,"0"="No","1"="Yes"))
#scale the data:
num=list(names(numeric))
train.num=scale(train[,names(train) %in% num[[1]]])
train.scale=cbind(train[,!names(train) %in% num[[1]]],train.num)
test.num=scale(test[,names(test) %in% num[[1]]])
test.scale=cbind(test[,!names(test) %in% num[[1]]],test.num)
#str(train)
factor.col=c("BusinessTravel","EnvironmentSatisfaction","Gender","JobInvolvement","JobLevel","JobSatisfaction","MaritalStatus","OverTime","PerformanceRating","RelationshipSatisfaction","WorkLifeBalance","Department","EducationField","JobRole")
train.scale[factor.col]=lapply(train.scale[factor.col],factor)
test.scale[factor.col]=lapply(test.scale[factor.col],factor)
p=prop.table(table(train.scale$Attrition))
cat("Before SMOTE the propotions are:"); print(p,row.names=FALSE)
set.seed(1000)
smote_train=SMOTE(Attrition ~ .,data=train.scale)
q=prop.table(table(smote_train$Attrition))
cat("After SMOTE the propotions are:"); print(q,row.names=FALSE)
install.packages("lime")
knitr::opts_chunk$set(echo = TRUE,message = FALSE,warning = FALSE)
library(ggplot2)
library(dplyr)
library(viridis)
library(stringr)
library(ggthemes)
library(tidyverse)
library(wordcloud2)
library(zoo)
ted=read.csv("ted_main.csv",header=TRUE,stringsAsFactors = FALSE)
transcript=read.csv("transcripts.csv",header=TRUE,stringsAsFactors = FALSE)
glimpse(ted)
View(ted)
temp= ted %>% group_by(event,name) %>% arrange(desc(views)) %>% top_n(name,wt=views)
temp= ted %>% group_by(event) %>% arrange(desc(views)) %>% top_n(name,wt=views)
temp= ted %>% group_by(event,name) %>% arrange(desc(views)) %>% top_n(10,wt=views)
View(temp)
temp= ted %>% group_by(event,name) %>% arrange(desc(views)) %>% top_n(10,wt=views) %>% select(event,name,views)
View(temp)
temp[temp$event=="TED2006"]
temp[,temp$event=="TED2006"]
temp[temp$event=="TED2006",]
temp= ted %>% group_by(event) %>% arrange(desc(views)) %>% top_n(10,wt=views) %>% select(event,name,views)
View(temp)
temp= ted %>% group_by(event)  %>% top_n(10,wt=views) %>% select(event,name,views)
View(temp)
temp= ted[order(event,-views)]
library(data.table)
temp= ted[order(event,-views)]
temp= ted[event,keyby=.(name,views)]
temp= ted[event=="TED2006",keyby=.(name,views)]
temp= ted[event=="TED2006",.order(name,-views),keyby=.(views)]
knitr::opts_chunk$set(echo = TRUE,message = FALSE,warning = FALSE)
temp= ted[,head(.SD,5),keyby=.(views)]
temp= ted[,head(.SD,5),by=event]
temp= ted[,head(.SD,5)]
library(data.table)
temp= ted[,head(.SD,5)]
View(temp)
temp= ted[,head(.SD,5),by=event]
temp=data.table(ted)
temp=temp[,head(.SD,5),keyby=views]
View(temp)
class(temp)
class(ted)
glimpse(temp)
glimpse(temp)
library(ggplot2)
library(dplyr)
library(viridis)
library(stringr)
library(ggthemes)
library(tidyverse)
library(wordcloud2)
glimpse(temp)
temp=temp[,head(.SD,5),keyby=event]
View(temp)
temp=temp[,event,by=c(views)]
temp=data.table(ted)
temp=temp[,event,by=c(views)]
temp=temp[,event,by=views]
View(temp)
temp=data.table(ted)
temp=temp[name,event,by=views]
temp=setorder(setDT(ted),event,-views)[,head(.SD,5),keyby=views]
View(temp)
temp=setorder(setDT(ted),-views)[,head(.SD,5),keyby=event]
temp=setorder(setDT(ted),-views)[,head(.SD,5),keyby=event] %>% select(event,views,name)
View(temp)
temp=temp[event,order(-views),head(.SD,5)] %>% select(event,views,name)
temp=temp[,order(-views),head(.SD,5)] %>% select(event,views,name)
temp=temp[,order(-views),head(.SD,5)] #%>% select(event,views,name)
View(temp)
temp=temp[,order(-views),by=event] %>% select(event,views,name)
temp=temp[,head(.SD,10),by="views"]
temp=temp[,head(.SD,10),by=views]
temp=data.table(ted)
temp=temp[,head(.SD,10),by=views]
View(temp)
temp=temp[,head(.SD,10),by=views] %>% select(event,name,views)
View(temp)
temp=temp[,head(.SD,10),by=views] %>% select(event,name,views) %>% group_by(event)
View(temp)
temp=temp[,head(.SD,10),by=event] %>% select(event,name,views) %>% group_by(event)
temp=data.table(ted)
temp=temp[,head(.SD,10),by=event] %>% select(event,name,views) %>% group_by(event)
View(temp)
cat("There are ",length(ted$event),"unique events")
cat("There are ",length(unique(ted$event)),"unique events")
temp=ted %>% group_by(event) %>% tally() %>% arrange(desc(n))
ggplot(head(temp,20),aes(factor(event,levels=event),n,fill=event))+geom_bar(stat="identity")+scale_fill_viridis(discrete=TRUE,option="C")+themefn+labs(x="Event",y="Number of Talks",title="Top 20 Events by number of talks")+scale_x_discrete(labels=function(x) str_wrap(x,width=10))
themefn=theme(legend.position="none",axis.text.x=element_text(angle=90,hjust=0.5),plot.title=element_text(size=12,hjust=0.5,face="bold",margin=margin(b=20)))
ggplot(head(temp,20),aes(factor(event,levels=event),n,fill=event))+geom_bar(stat="identity")+scale_fill_viridis(discrete=TRUE,option="C")+themefn+labs(x="Event",y="Number of Talks",title="Top 20 Events by number of talks")+scale_x_discrete(labels=function(x) str_wrap(x,width=10))
temp=data.table(ted)
temp=temp[,head(.SD,10),by=event] %>% select(event,name,views) %>% group_by(event)
temp$viewsinMl=temp$views/1000000
temp$viewsinMl=round(temp$views/1000000,3)
library(treemap)
treemap(temp,index=c("event","name"),vSize ="viewsinMl",vColor = "event",palette="Set3",title="",sortID ="-viewsinMl",border.col = "#FFFFFF",type="categorical",fontsize.legend = 0,bg.labels = "#FFFFFF")
tedglobal=temp[grep("TED[num]",value=TRUE),]
tedglobal=temp[grep("TED[num]",temp$event,value=TRUE),]
View(tedglobal)
tedglobal=temp[grep("TED[:digit:]",temp$event,value=TRUE),]
tedglobal=temp[grepl("TED[:digit:]",temp$event,value=TRUE),]
pattern="TED"
str_subset(unique(temp$event),pattern)
pattern="TED[:digit:]"
str_subset(unique(temp$event),pattern)
tedglobal=temp[str_detect(temp$event,pattern)==TRUE,]
tedevent=temp[str_detect(temp$event,pattern)==TRUE,]
View(tedevent)
treemap(tedevent,index=c("event","name"),vSize ="viewsinMl",vColor = "event",palette="Set3",title="TED Events",sortID ="-viewsinMl",border.col = "#FFFFFF",type="categorical",fontsize.legend = 0,bg.labels = "#FFFFFF")
temp=data.table(ted)
temp=temp[,head(.SD,5),by=event] %>% select(event,name,views) %>% group_by(event)
temp$viewsinMl=round(temp$views/1000000,2)
tedevent=temp[str_detect(temp$event,pattern)==TRUE,]
treemap(tedevent,index=c("event","name"),vSize ="viewsinMl",vColor = "event",palette="Set3",title="TED Events",sortID ="-viewsinMl",border.col = "#FFFFFF",type="categorical",fontsize.legend = 0,bg.labels = "#FFFFFF") #Visualize using treemap
```{r,fig.width=12,fig.height=7}
treemap(tedevent,index=c("event","name"),vSize ="viewsinMl",vColor = "event",palette="Set3",title="TED Events",sortID ="-viewsinMl",border.col = "#FFFFFF",type="categorical",fontsize.legend = 0,bg.labels = "#FFFFFF") #Visualize using treemap
treemap(tedevent,index=c("event","name"),vSize ="viewsinMl",vColor = "event",palette="Set3",title="TED Events",sortID ="-viewsinMl",border.col = "#FFFFFF",type="categorical",fontsize.legend = 0,fontsize.title = 17,border.col="red",bg.labels = "#FFFFFF") #Visualize using treemap
treemap(tedevent,index=c("event","name"),vSize ="viewsinMl",vColor = "event",palette="Set3",title="TED Events",sortID ="-viewsinMl",border.col = "#FFFFFF",type="categorical",fontsize.legend = 0,fontsize.title = 17,bg.labels = "#FFFFFF") #Visualize using treemap
pattern="TEDGlobal" #Select only TEDYYYY events.
tedglobal=temp[str_detect(temp$event,pattern)==TRUE,] #Subset the pattern to separate DF
treemap(tedGlobal,index=c("event","name"),vSize ="viewsinMl",vColor = "event",palette="Set3",title="TED Events",sortID ="-viewsinMl",border.col = "#FFFFFF",type="categorical",fontsize.legend = 0,fontsize.title = 17,bg.labels = "#FFFFFF") #Visualize using treemap
treemap(tedglobal,index=c("event","name"),vSize ="viewsinMl",vColor = "event",palette="Set3",title="TED Events",sortID ="-viewsinMl",border.col = "#FFFFFF",type="categorical",fontsize.legend = 0,fontsize.title = 17,bg.labels = "#FFFFFF") #Visualize using treemap
treemap(tedglobal,index=c("event","name"),vSize ="viewsinMl",vColor = "event",palette="Set3",title="TED Global",sortID ="-viewsinMl",border.col = "#FFFFFF",type="categorical",fontsize.legend = 0,fontsize.title = 17,bg.labels = "#FFFFFF") #Visualize using treemap
treemap(tedglobal,index=c("event","name"),vSize ="viewsinMl",vColor = "event",palette="Set3",title="TED Global",sortID ="-viewsinMl",border.col = "#FFFFFF",type="categorical",fontsize.legend = 0,fontsize.title = 17,bg.labels = "#CD69C9") #Visualize using treemap
treemap(tedglobal,index=c("event","name"),vSize ="viewsinMl",vColor = "event",palette="Set3",title="TED Global",sortID ="-viewsinMl",border.col = "#CD69C9",type="categorical",fontsize.legend = 0,fontsize.title = 17,bg.labels = "#FFFFFF") #Visualize using treemap
treemap(tedglobal,index=c("event","name"),vSize ="viewsinMl",vColor = "event",palette="Set3",title="TED Global",sortID ="-viewsinMl",border.col = "#9B30FF",type="categorical",fontsize.legend = 0,fontsize.title = 17,bg.labels = "#FFFFFF") #Visualize using treemap
treemap(tedglobal,index=c("event","name"),vSize ="viewsinMl",vColor = "event",palette="Set3",title="TED Global",sortID ="-viewsinMl",border.col = "#9B30FF",type="categorical",fontsize.legend = 0,fontsize.title = 17,bg.labels = "#FFFFFF") #Visualize using treemap
unique(temp$event)
View(tedglobal)
treemap(tedglobal,index=c("event","name"),vSize ="viewsinMl",vColor = "event",palette="Set2",title="TED Global",sortID ="-viewsinMl",border.col = "#9B30FF",type="categorical",fontsize.legend = 0,fontsize.title = 17,bg.labels = "#FFFFFF") #Visualize using treemap
treemap(tedglobal,index=c("event","name"),vSize ="viewsinMl",vColor = "event",palette="HCL",title="TED Global",sortID ="-viewsinMl",border.col = "#9B30FF",type="categorical",fontsize.legend = 0,fontsize.title = 17,bg.labels = "#FFFFFF") #Visualize using treemap
treemap(tedevent,index=c("event","name"),vSize ="viewsinMl",vColor = "event",palette="Set3",title="TED Events",sortID ="-viewsinMl",border.col = "#FFFFFF",type="categorical",fontsize.legend = 0,fontsize.title = 17,bg.labels = "#FFFFFF") #Visualize using treemap
View(tedevent)
View(tedglobal)
treemap(tedglobal,index=c("event","name"),vSize ="viewsinMl",vColor = "event",palette="HCL",title="TED Global",sortID ="-viewsinMl",border.col = "#9B30FF",type="categorical",fontsize.legend = 0,fontsize.title = 17,bg.labels = "#FFFFFF") #Visualize using treemap
str_extract(temp$event,pattern)
str_match(temp$event,pattern)
knitr::opts_chunk$set(echo = TRUE,message = FALSE,warning = FALSE)
library(ggplot2)
library(ggrepel)
library(dplyr)
library(viridis)
library(stringr)
library(ggthemes)
library(tidyverse)
library(wordcloud2)
library(data.table)
library(zoo)
library(treemap)
ted=read.csv("ted_main.csv",header=TRUE,stringsAsFactors = FALSE)
transcript=read.csv("transcripts.csv",header=TRUE,stringsAsFactors = FALSE)
glimpse(ted)
themefn=theme(legend.position="none",axis.text.x=element_text(angle=90,hjust=0.5),plot.title=element_text(size=12,hjust=0.5,face="bold",margin=margin(b=20)))
ggplot(ted,aes(comments,..count..,fill="#FDAE61"))+geom_histogram()+themefn+labs(x="Comments",y="Count",title="Distribution of comments")+scale_x_continuous(limits=c(0,1500),breaks=seq(0,1500,150))+geom_vline(aes(xintercept = median(ted$comments)),linetype=4,size=1,color="black")
ggplot(ted,aes(duration,..count..,fill="#8b96fe"))+geom_histogram()+themefn+labs(x="Duration",y="Count",title="Distribution of Duration")+geom_vline(aes(xintercept = median(ted$duration)),linetype=4,size=1,color="black")+scale_x_continuous(limits=c(0,4000),breaks=seq(0,4000,500))
View(ted)
ggplot(ted,aes(comments,..count..))+geom_histogram()+themefn+labs(x="Comments",y="Count",title="Distribution of comments")+scale_x_continuous(limits=c(0,1500),breaks=seq(0,1500,150))+geom_vline(aes(xintercept = median(ted$comments)),linetype=4,size=1,color="black")
ggplot(ted,aes(comments,..count..))+geom_histogram(fill="red2")+themefn+labs(x="Comments",y="Count",title="Distribution of comments")+scale_x_continuous(limits=c(0,1500),breaks=seq(0,1500,150))+geom_vline(aes(xintercept = median(ted$comments)),linetype=4,size=1,color="black")
ggplot(ted,aes(duration,..count..))+geom_histogram(fill="pink2")+themefn+labs(x="Duration",y="Count",title="Distribution of Duration")+geom_vline(aes(xintercept = median(ted$duration)),linetype=4,size=1,color="black")+scale_x_continuous(limits=c(0,4000),breaks=seq(0,4000,500))
ggplot(ted,aes(views))+geom_histogram(binwidth=20,aes(y=..count..),fill="green4")+themefn+labs(x="Views",y="Count",title="Distribution of Views")+geom_vline(aes(xintercept = median(ted$views)),linetype=4,size=1,color="black")#+scale_x_continuous(limits=c(0,4000),breaks=seq(0,4000,100))
View(ted)
library(cowplot)
p1=ggplot(ted,aes(comments,..count..))+geom_histogram(fill="red2")+themefn+labs(x="Comments",y="Count",title="Distribution of comments")+scale_x_continuous(limits=c(0,1500),breaks=seq(0,1500,150))+geom_vline(aes(xintercept = median(ted$comments)),linetype=4,size=1,color="black")
p2=ggplot(ted,aes(duration,..count..))+geom_histogram(fill="pink2")+themefn+labs(x="Duration",y="Count",title="Distribution of Duration")+geom_vline(aes(xintercept = median(ted$duration)),linetype=4,size=1,color="black")+scale_x_continuous(limits=c(0,4000),breaks=seq(0,4000,500))
plot_grid(p1,p2,label_fontface = "italics")
plot_grid(p1,p2,label_fontface = "italics",cols=1)
plot_grid(p1,p2,label_fontface = "italics",cols=1)
summary(ted$views)
knitr::opts_chunk$set(echo = TRUE,message = FALSE,warning = FALSE)
library(ggplot2)
library(ggrepel)
library(RColorBrewer)
library(dplyr)
library(viridis)
library(stringr)
library(ggthemes)
library(tidyverse)
library(wordcloud2)
library(data.table)
library(zoo)
library(treemap)
library(cowplot)
ted=read.csv("ted_main.csv",header=TRUE,stringsAsFactors = FALSE)
transcript=read.csv("transcripts.csv",header=TRUE,stringsAsFactors = FALSE)
glimpse(ted)
View(ted)
temp=ted %>% group_by(speaker_occupation) %>% tally(sort=TRUE)
View(temp)
library(wordcloud2)
wordcloud2(temp,size=2,minSize = 1,fontFamily = 'Verdana',color='random-light',backgroundColor = 'white')
wordcloud2(temp,size=2,minSize = 1,fontFamily = 'Verdana',color='random-light',backgroundColor = 'white',shape="square",ellipticity=0.3,minRotation = -pi/5,maxRotation = pi/5)
wordcloud2(temp,size=2,minSize = 1,fontFamily = 'Verdana',color=colorVec,backgroundColor = 'grey',shape="star",ellipticity=0.3,minRotation = -pi/5,maxRotation = pi/5,shuffle = FALSE)
wordcloud2(temp,size=2,minSize = 1,fontFamily = 'Verdana',color=ifelse(temp[,2]>25,'darkgreen','skyblue'),backgroundColor = 'grey',shape="star",ellipticity=0.3,minRotation = -pi/5,maxRotation = pi/5,shuffle = FALSE)
setwd("~/Downloads/R/TED")
knitr::opts_chunk$set(echo = TRUE,message = FALSE,warning = FALSE)
library(ggplot2)
library(ggrepel)
library(RColorBrewer)
library(dplyr)
library(viridis)
library(stringr)
library(ggthemes)
library(tidyverse)
library(wordcloud2)
library(data.table)
library(anytime)
library(zoo)
library(treemap)
library(cowplot)
library(wordcloud)
ted=read.csv("ted_main.csv",header=TRUE,stringsAsFactors = FALSE)
transcript=read.csv("transcripts.csv",header=TRUE,stringsAsFactors = FALSE)
glimpse(ted)
themefn=theme(legend.position="none",axis.text.x=element_text(angle=90,hjust=0.5),plot.title=element_text(size=12,hjust=0.5,face="bold",margin=margin(b=20)))
ted$date=anydate(ted$film_date)
ted$month=month(ted$date)
ted$year=year(ted$date)
ted$wkday=weekdays(ted$date,abbreviate = TRUE)
ted$pubdate=anydate(ted$published_date)
ted$pubmonth=month(ted$pubdate)
ted$pubyear=year(ted$pubdate)
ted$pubwkday=weekdays(ted$pubdate,abbreviate = TRUE)
temp=ted %>% select(pubdate,views)
temp$wkday=lubridate::wday(temp$pubdate)
anova(lm(wkday~views,data=na.omit(temp)))
View(ted)
ted$pubmonth=lubridate::month(ted$pubmonth,abbr=TRUE,label=TRUE)
temp=setDT(ted)[,.(totalviews=sum(views)),by=.(pubmonth,pubyear)][order(-totalviews)]
View(temp)
ggplot(temp,aes(pubmonth,totalviews,col=pubyear))+geom_Point(alpha=0.4,size=2)+geom_line()+themefn+labs(x="Month",y="Total Views",title="Trend of views over the month in a year ")
ggplot(temp,aes(pubmonth,totalviews,col=pubyear))+geom_point(alpha=0.4,size=2)+geom_line()+themefn+labs(x="Month",y="Total Views",title="Trend of views over the month in a year ")
ggplot(temp,aes(pubmonth,totalviews,col=pubyear))+geom_point(alpha=0.4,size=2)+geom_line()+themefn+labs(x="Month",y="Total Views",title="Trend of views over the month in a year ")+facet_grid(~pubyear)
ggplot(temp,aes(pubmonth,totalviews,col=pubyear))+geom_point(alpha=0.4,size=2)+geom_line()+themefn+labs(x="Month",y="Total Views",title="Trend of views over the month in a year ")+facet_grid(~pubyear)
ggplot(temp,aes(pubmonth,totalviews,col=pubyear))+geom_point(alpha=0.4,size=2)+geom_line()+themefn+labs(x="Month",y="Total Views",title="Trend of views over the month in a year ")+facet_grid(~pubyear)+scale_y_continuous(labels=scales::comma)
ggplot(temp,aes(pubmonth,totalviews,col=pubyear))+geom_point(alpha=0.4,size=2)+geom_line()+themefn+labs(x="Month",y="Total Views",title="Trend of views over the month in a year ")+facet_grid(~pubyear)+scale_y_continuous(labels=scales::comma)
ggplot(temp,aes(pubmonth,totalviews,col=pubyear))+geom_point(alpha=0.4,size=2)+geom_line()+themefn+labs(x="Month",y="Total Views",title="Trend of views over the month in a year ")+facet_grid(~pubyear)+scale_y_continuous(labels=scales::comma)
ggplot(temp,aes(pubmonth,totalviews,fill=pubyear))+geom_point(alpha=0.4,size=totalviews)+geom_line()+themefn+labs(x="Month",y="Total Views",title="Trend of views over the month in a year ")+facet_grid(~pubyear)+scale_y_continuous(labels=scales::comma)
ggplot(temp,aes(pubmonth,totalviews,fill=pubyear))+geom_point(alpha=0.4,aes(size=totalviews))+geom_line()+themefn+labs(x="Month",y="Total Views",title="Trend of views over the month in a year ")+facet_grid(~pubyear)+scale_y_continuous(labels=scales::comma)
ggplot(temp,aes(pubmonth,totalviews,col=pubyear))+geom_point(alpha=0.4,aes(size=totalviews))+geom_line()+themefn+labs(x="Month",y="Total Views",title="Trend of views over the month in a year ")+facet_grid(~pubyear)+scale_y_continuous(labels=scales::comma)
canva_palettes
ggplot(temp,aes(pubmonth,totalviews,col=pubyear))+geom_point(alpha=0.4,aes(size=totalviews))+geom_line()+themefn+labs(x="Month",y="Total Views",title="Trend of views over the month in a year ")+facet_grid(~pubyear)+scale_y_continuous(labels=scales::comma)+scale_fill_canva(palette="Sunny and calm")
ggplot(temp,aes(pubmonth,totalviews,fill=pubyear))+geom_point(alpha=0.4,aes(size=totalviews))+geom_line()+themefn+labs(x="Month",y="Total Views",title="Trend of views over the month in a year ")+facet_grid(~pubyear)+scale_y_continuous(labels=scales::comma)+scale_fill_canva(palette="Sunny and calm")
ggplot(temp,aes(pubmonth,totalviews,col=pubyear))+geom_point(alpha=0.4,aes(size=totalviews))+geom_line()+themefn+labs(x="Month",y="Total Views",title="Trend of views over the month in a year ")+facet_grid(~pubyear)+scale_y_continuous(labels=scales::comma)+scale_color_canva(palette="Sunny and calm")
ggplot(temp,aes(pubmonth,totalviews,col=pubyear))+geom_point(alpha=0.4,aes(size=totalviews))+geom_line()+themefn+labs(x="Month",y="Total Views",title="Trend of views over the month in a year ")+facet_grid(~pubyear)+scale_y_continuous(labels=scales::comma)+scale_color_canva(palette="Neon and bold")
ggplot(temp,aes(pubmonth,totalviews,col=pubyear))+geom_point(alpha=0.4,aes(size=totalviews))+geom_line()+themefn+labs(x="Month",y="Total Views",title="Trend of views over the month in a year ")+scale_y_continuous(labels=scales::comma)
ggplot(temp,aes(pubmonth,totalviews,group=1))+geom_point(alpha=0.4,aes(color=factor(pubmonth),size=1.5))+geom_line(size=2,alpha=0.2)+themefn+labs(x="Month",y="Total Views",title="Trend of views over the month in a year ")+scale_y_continuous(labels=scales::comma)
ggplot(temp,aes(pubmonth,totalviews,group=1))+geom_point(alpha=0.4,aes(color=factor(pubmonth),size=1.5))+geom_line(size=2,alpha=0.2)+themefn+labs(x="Month",y="Total Views",title="Trend of views over the month in a year ")+scale_y_continuous(labels=scales::comma)+facet_grid(~pubyear)
ggplot(temp,aes(pubmonth,totalviews,group=1))+geom_point(alpha=0.4,aes(color=factor(pubmonth),size=1.5))+geom_line(size=2,alpha=0.2)+themefn+labs(x="Month",y="Total Views",title="Trend of views over the month in a year ")+scale_y_continuous(labels=scales::comma)+facet_grid(pubyear~,n)
ggplot(temp,aes(pubmonth,totalviews,group=1))+geom_point(alpha=0.4,aes(color=factor(pubmonth),size=1.5))+geom_line(size=2,alpha=0.2)+themefn+labs(x="Month",y="Total Views",title="Trend of views over the month in a year ")+scale_y_continuous(labels=scales::comma)+facet_grid(pubyear~)
ggplot(temp,aes(pubmonth,totalviews,group=1))+geom_point(alpha=0.4,aes(color=factor(pubmonth),size=1.5))+geom_line(size=2,alpha=0.2)+themefn+labs(x="Month",y="Total Views",title="Trend of views over the month in a year ")+scale_y_continuous(labels=scales::comma)+facet_grid(pubyear~.)
ggplot(temp,aes(pubmonth,totalviews,group=1))+geom_point(alpha=0.4,aes(color=factor(pubmonth),size=totalviews))+geom_line(size=2,alpha=0.2)+themefn+labs(x="Month",y="Total Views",title="Trend of views over the month in a year ")+scale_y_continuous(labels=scales::comma)+facet_grid(pubyear~.)
ggplot(temp,aes(pubmonth,totalviews,group=1))+geom_point(alpha=0.4,aes(color=factor(pubmonth),size=totalviews))+geom_line(size=2,alpha=0.2)+themefn+labs(x="Month",y="Total Views",title="Trend of views over the month in a year ")+scale_y_continuous(labels=scales::comma)+facet_grid(pubyear~.)+scale_color_brewer(palette="Set3")
ggplot(temp,aes(pubmonth,totalviews,group=1))+geom_point(alpha=0.4,aes(color=factor(pubmonth),size=totalviews))+geom_line(size=2,alpha=0.2)+themefn+labs(x="Month",y="Total Views",title="Trend of views over the month in a year ")+scale_y_continuous(labels=scales::comma)+facet_grid(pubyear~.)+scale_color_brewer(palette="Set3",scales="free",space="free")
ggplot(temp,aes(pubmonth,totalviews,group=1))+geom_point(alpha=0.4,aes(color=factor(pubmonth),size=totalviews))+geom_line(size=2,alpha=0.2)+themefn+labs(x="Month",y="Total Views",title="Trend of views over the month in a year ")+scale_y_continuous(labels=scales::comma)+facet_grid(pubyear~. .scales="free",space="free")+scale_color_brewer(palette="Set3")
ggplot(temp,aes(pubmonth,totalviews,group=1))+geom_point(alpha=0.4,aes(color=factor(pubmonth),size=totalviews))+geom_line(size=2,alpha=0.2)+themefn+labs(x="Month",y="Total Views",title="Trend of views over the month in a year ")+scale_y_continuous(labels=scales::comma)+facet_grid(pubyear~. ,scales="free",space="free")+scale_color_brewer(palette="Set3")
